#!/bin/bash

source "$(dirname "$0")/config"

print_header="$lib/mkheader/short_header"
>&2 $print_header -d "$xdir"

############################################################
# Checking environment file

gitdir="$(cd "$xdir" ; find_git 2> /dev/null )"

if [ -z "$gitdir" ] ; then
    >&2 warning << EOF
You are not inside a git repository. We will assume environment \
file is in the path of install executable.
EOF
    environment_file="$xdir/.env"
else
    environment_file="$gitdir/.env"
fi

if [ ! -s "$environment_file" ] ; then
	fatalerr "There is no environment file. Have you installed properly?"
fi

############################################################
# Reading values from environment file

lib="$(find_lib)"
get_env="$lib/bash_common/get_env $environment_file"
database="$($get_env POSTGRES_DATABASE)"
uname="$($get_env POSTGRES_USER)"

############################################################
# Logging into psql

>&2 print_eof << EOF
To uninstall, ${yellow}you will need to log in to Postgres as a super-user${no_color}. Please type in your password in order to have sudo access.
EOF

sudo -i -u postgres bash << EOF || exit 1
psql -c "DROP DATABASE $database; " \
-c "DROP USER $uname; " >&2
EOF

############################################################
# Unset environment file

>&2 echo "Unsetting environment file"
sed -ri "/(POSTGRES_USER|POSTGRES_PASSWORD|POSTGRES_HOST|POSTGRES_DATABASE|POSTGRES_PORT)/d" "$environment_file"
>&2 echo -e "${done}"

############################################################
# Remove uploads directory

if [ -d "$gitdir/uploads" ] ; then
	rm -r "$gitdir/uploads"
fi
